# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó
# ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù
#    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù
#    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó
#    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó
#    ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù
# Terminal multiplexer
# https://github.com/tmux/tmux

# TODO: learn how this works
set-option -g focus-events on

# TODO: find a way to toggle this?
set-option -g display-time 3000

# FIX: user action isn't recognized by Wezterm via `run-shell` üò≠
# set-hook -g client-session-changed 'run-shell -t :1 "tmux-session-changed"'

# colors
# set-option -sa terminal-features ',xterm-256color:RGB'
set -g default-terminal "tmux-256color"
set-option -a terminal-features 'xterm-256color:RGB'
# set -ga update-environment TERM
# set -ga update-environment TERM_PROGRAM
# set -g default-terminal "${TERM}"

# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#(~/.config/tmux/plugins/tmux-nerd-font-window-name/bin/tmux-nerd-font-window-name #{pane_current_command} #{window_panes})'

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 1000000 # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
set -g status-interval 3     # update the status bar every 3 seconds

set -g status-left "#[fg=blue,bold]#S "
set -g status-right " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.yml)"
set -g status-left-length 200    # increase length (from 10)
set -g status-right-length 200   # increase length (from 10)
set -g status-position top       # macOS / darwin style
set -g status-style 'bg=default' # transparent

set -g window-status-current-format '*#[fg=magenta]#W'
set -g window-status-format ' #[fg=gray]#W'

set -g allow-passthrough on
set -g message-command-style bg=default,fg=yellow
set -g message-style bg=default,fg=yellow
set -g mode-style bg=default,fg=yellow
set -g pane-active-border-style 'fg=white,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

bind '%' split-window -c '#{pane_current_path}' -h
bind '"' split-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
# TODO: repeat this for all bindings

bind -N "‚åò+l last-session (via sesh) " L run-shell "sesh last || tmux display-message -d 1000 'Oops, no last sessions found'"
bind -N "‚åò+9 switch to root session (via sesh) " 9 run-shell "sesh connect --root $(pwd)"

bind -N "‚åò+g lazygit " g new-window -c "#{pane_current_path}" -n "üå≥" "lazygit 2> /dev/null"
bind -N "‚åò+G gh-dash " G new-window -c "#{pane_current_path}" -n "üò∫" "ghd 2> /dev/null"
bind -N "‚åò+b build" b split-window -v -l 10 build
bind -N "‚åò+d dev" D split-window -v -l 10 dev
bind -N "‚åò+R run a script" Y split-window -v -l 10 "npm run (jq -r '.scripts | keys[]' package.json | fzf --no-border)"
bind -N "‚åò+Q kill current session" Q kill-session
bind -N "‚åò+‚áß+t break pane" B break-pane
bind -N "‚åò+^+t join pane" J join-pane -t 1
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt (cmd+w)
bind-key e send-keys "tmux capture-pane -p -S - | nvim -c 'set buftype=nofile' +" Enter

bind-key "K" display-popup -E -w 33% -h 63% "sesh connect \"$(
  sesh list -i | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a sesh' --prompt='‚ö°'
)\""

bind-key "R" display-popup -E -w 40% "sesh connect \"\$(
  sesh list -i -H | gum filter --value \"\$(sesh root)\" --limit 1 --fuzzy --no-sort --placeholder 'Pick a sesh' --prompt='‚ö°'
)\""

# bind-key "K" display-popup -E -w 40% "sesh connect \"$(
#   sesh list -i | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a sesh' --prompt='‚ö°'
# )\""

bind-key "A" display-popup -E -w 40% "sesh connect \"$(
  fabric -l | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a fabric pattern' --prompt='üß†'
)\""

# bind-key "J" display-popup -E -w 40% "sesh connect \"$(
#   sesh list | zf -p --height 50
# )\""

bind-key "J" run-shell "sesh connect \"$(
  sesh list | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
)\""

# NOTE: has icons but is less stable
# bind-key "K" run-shell "sesh_fzf_tmux_choose"
# bind-key "J" run-shell "sesh connect $(
# 	sesh list -i | fzf-tmux -p 55%,60% \
# 		--no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
# 		--header '  ^a all ^t tmux ^x zoxide ^g config ^d tmux kill ^f find' \
# 		--bind 'tab:down,btab:up' \
# 		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list -i)' \
# 		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -it)' \
# 		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -ic)' \
# 		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -iz)' \
# 		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
# 		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
# )"

# NOTE: can be used for debugging
# )\" 2> /tmp/sesh-$(date +"%Y-%m-%d-%H-%M-%S").txt"

bind-key "Z" display-popup -E "sesh connect \$(sesh list | zf --height 24)"

set -g @fzf-url-fzf-options '-p 60%,30% --prompt="ÔÇé   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'
set -g @tmux-last-color on
set -g @tmux-last-pager 'less -r'
set -g @tmux-last-pager 'less'
set -g @tmux-last-prompt-pattern 'ÔÅî '
set -g @tmux-nerd-font-window-name-shell-icon 'ÔÅî'
set -g @tmux-nerd-font-window-name-show-name false
set -g @thumbs-command 'echo -n {} | pbcopy' # copy to clipboard
set -g @thumbs-key C

# my plugins (git@github.com: clones with ssh key for development)
# set -g @plugin 'git@github.com:joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'git@github.com:joshmedeski/tmux-fzf-url'
set -g @plugin 'git@github.com:joshmedeski/tmux-nerd-font-window-name'
# set -g @plugin 'git@github.com:joshmedeski/tmux-overmind'
set -g @tnotify-custom-cmd 'bash ~/c/dotfiles/bin/tmux-notify.sh'

# community plugins
set -g @plugin 'christoomey/vim-tmux-navigator' # <ctrl>+hjkl
set -g @plugin 'fcsonline/tmux-thumbs'          # <cmd|shift>+c
# set -g @plugin 'jimeh/tmuxifier'
set -g @plugin 'rickstaa/tmux-notify'
set -g @plugin 'omerxx/tmux-sessionx'
# set -g @plugin 'IdoKendo/tmux-lazy'
# set -g @plugin 'omerxx/tmux-floax'

set -g @plugin 'tmux-plugins/tpm'        # load tpm
run "$HOME/.config/tmux/plugins/tpm/tpm" # run tpm (always end of file)
